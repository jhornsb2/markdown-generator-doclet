/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

configurations {
    jaxDoclet
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Add this to use the doclet from the sibling project
    jaxDoclet project(':markdown-generator-doclet')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'testjavaproject.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Custom Javadoc task using the MarkdownGeneratorDoclet
task generateMarkdown(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = file("$rootDir/generated-docs/TestJavaProject/app")
    classpath += configurations.compileClasspath

    title = ''

    // Use the custom doclet
    options.docletpath = configurations.jaxDoclet.files as List
    options.doclet = 'com.github.jhornsb2.doclet.generator.markdown.MarkdownGeneratorDoclet'

    // Example: pass options to your doclet (optional)
    // options.addStringOption('d', file("$rootDir/generated-docs/TestJavaProject/app").absolutePath)
    // options.addBooleanOption('notimestamp', true)
}
